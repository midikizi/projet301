a:5:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:106:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:106:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:94:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:106:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:94:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:106:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:94:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:131:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:295;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:137:"C:\Users\Top_runner\Documents\projet\PPE301_MicroFinance\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}